<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Leszek Pomianowski and WPF UI Contributors.
    All Rights Reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Jajo.Ui.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Jajo.Ui;component/Assets/Brushes.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Jajo.Ui;component/Assets/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Jajo.Ui;component/Styles/Controls/TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Jajo.Ui;component/Styles/Controls/DynamicSvg.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type controls:Snackbar}">
        <Setter Property="DynamicSvg">
            <Setter.Value>
                <controls:DynamicSvg Style="{StaticResource CloseSvg}" Foreground="{StaticResource White}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="MessageForeground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorSecondary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="IconForeground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource SystemFillColorSolidNeutralBackground}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="Margin" Value="24" />
        <Setter Property="MinHeight" Value="68" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Snackbar}">
                    <Grid
                        x:Name="CardBorderContainer"
                        Margin="0,0,0,-200"
                        Opacity="0">
                        <Border
                            x:Name="CardBorder"
                            MinHeight="{TemplateBinding MinHeight}"
                            Padding="12"
                            VerticalAlignment="Bottom"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="4"
                            RenderTransform="{TemplateBinding SlideTransform}"
                            Visibility="{TemplateBinding Visibility}">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="30"
                                    Direction="0"
                                    Opacity="0.4"
                                    ShadowDepth="0"
                                    Color="#202020" />
                            </Border.Effect>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition x:Name="ChevronColumn" Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentControl Content="{TemplateBinding DynamicSvg}"/>
                                <!--<controls:DynamicSvg
                                    x:Name="CardIcon"
                                    Grid.Column="0"
                                    Margin="0,0,12,0"
                                    VerticalAlignment="Center"
                                    FontSize="26"
                                    Style="{TemplateBinding DynamicSvg}"
                                    Foreground="{TemplateBinding IconForeground}" />-->

                                <StackPanel
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    SnapsToDevicePixels="True">
                                    <TextBlock
                                        x:Name="TitleText"
                                        Margin="0,0,0,4"
                                        VerticalAlignment="Center"
                                        FontWeight="Medium"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Title}"
                                        TextWrapping="Wrap" />
                                    <TextBlock
                                        FontSize="11"
                                        Foreground="{TemplateBinding MessageForeground}"
                                        Text="{TemplateBinding Message}"
                                        TextWrapping="Wrap" />
                                </StackPanel>

                                <!--  We assume that Content is presented instead of Title and Message.  -->
                                <ContentPresenter Grid.Column="1" />

                                <controls:Button
                                    x:Name="CloseButton"
                                    Grid.Column="2"
                                    Margin="12,0,0,0"
                                    Padding="6"
                                    Appearance="{TemplateBinding Appearance}"
                                    Command="{Binding Path=TemplateButtonCommand, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    CommandParameter="close"
                                    Foreground="{TemplateBinding Foreground}">
                                    <controls:DynamicSvg Foreground="{TemplateBinding Foreground}"
                                                         Style="{StaticResource CloseSvg}" />
                                </controls:Button>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- <Trigger Property="Icon" Value="Empty"> -->
                        <!--     <Setter TargetName="CardIcon" Property="Margin" Value="0" /> -->
                        <!-- </Trigger> -->
                        <Trigger Property="CloseButtonEnabled" Value="False">
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CloseButton" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IsShown" Value="True">
                            <Setter Property="Visibility" Value="Visible"></Setter>
                            <Setter Property="Focusable" Value="True" />
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CardBorderContainer"
                                            Storyboard.TargetProperty="Margin">
                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,-200" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:.26" Value="0,0,0,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="CardBorderContainer"
                                            Storyboard.TargetProperty="(Grid.Opacity)"
                                            From="0"
                                            To="1"
                                            Duration="0:0:.26" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CardBorderContainer"
                                            Storyboard.TargetProperty="Margin">
                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,0" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:.32" Value="0,0,0,-200" />
                                        </ThicknessAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="CardBorderContainer"
                                            Storyboard.TargetProperty="(Grid.Opacity)"
                                            From="1"
                                            To="0"
                                            Duration="0:0:.32" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsShown" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.167"
                                                                    Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.167"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Appearance" Value="Success">
                <Setter Property="DynamicSvg">
                    <Setter.Value>
                        <controls:DynamicSvg Style="{StaticResource CloseSvg}" Foreground="{StaticResource White}"></controls:DynamicSvg>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFFFFF" />
                    </Setter.Value>
                </Setter>
                <Setter Property="MessageForeground">
                    <Setter.Value>
                        <SolidColorBrush Color="#87FFFFFF" />
                    </Setter.Value>
                </Setter>
                <Setter Property="IconForeground">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFFFFF" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource MainGreenColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Appearance" Value="Failure">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFFFFF" />
                    </Setter.Value>
                </Setter>
                <Setter Property="MessageForeground">
                    <Setter.Value>
                        <SolidColorBrush Color="#87FFFFFF" />
                    </Setter.Value>
                </Setter>
                <Setter Property="IconForeground">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFFFFF" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource MainBlueColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>