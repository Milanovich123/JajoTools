<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Leszek Pomianowski and WPF UI Contributors.
    All Rights Reserved.
    
    Based on Microsoft XAML for Win UI
    Copyright (c) Microsoft Corporation. All Rights Reserved.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Jajo.Ui.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Jajo.Ui;component/Assets/Brushes.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Jajo.Ui;component/Assets/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Jajo.Ui;component/Styles/Controls/TextBlock.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Thickness x:Key="ButtonPadding">11,5,11,6</Thickness>
    <Thickness x:Key="ButtonBorderThemeThickness">1</Thickness>
    <Thickness x:Key="ButtonIconMargin">0,0,8,0</Thickness>

    <Style x:Key="DefaultUiButtonStyle" TargetType="{x:Type controls:Button}">
        <!--  Universal WPF UI focus  -->
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <!--  Universal WPF UI focus  -->
        <Setter Property="Background" Value="{StaticResource LightBlue}" />

        <Setter Property="MouseOverBackground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorSecondary}" />
            </Setter.Value>
        </Setter>

        <Setter Property="PressedBackground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorTertiary}" />
            </Setter.Value>
        </Setter>

        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>

        <Setter Property="PressedForeground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorSecondary}" />
            </Setter.Value>
        </Setter>

        <Setter Property="IconForeground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>

        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="PressedBorderBrush" Value="Transparent" />
        <Setter Property="MouseOverBorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Appearance" Value="JajoPrimary" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Button}">
                    <Border
                        x:Name="ContentBorder"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Content="{TemplateBinding Content}"
                                TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
    
            <!--#region JajoPrimaryButton style-->
            <Trigger Property="Appearance" Value="JajoPrimary">

                <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontFamily" Value="Montserrat" />
                <Setter Property="FontWeight" Value="Regular" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Height" Value="36" />
                <Setter Property="Content" Value="Content" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type controls:Button}">
                            <Border
                                Background="{StaticResource LightBlue}"
                                CornerRadius="7"
                                Height="{TemplateBinding Height}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                x:Name="border">
                                <Border.Effect>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        Opacity="0.2"
                                        ShadowDepth="2" />
                                </Border.Effect>
                                <Grid>
                                    <TextBlock
                                        Foreground="{StaticResource White}"
                                        HorizontalAlignment="Center"
                                        IsHitTestVisible="False"
                                        Margin="24,7,24,9"
                                        Style="{StaticResource AeonikPro16R}"
                                        Text="{Binding Content, RelativeSource={RelativeSource AncestorType=Button}}"
                                        VerticalAlignment="Center"
                                        Visibility="Visible"
                                        x:Name="Content" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource MainGray}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation
                                                    Duration="0:0:0.2"
                                                    FillBehavior="Stop"
                                                    From="{StaticResource LightBlueColor}"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource MainBlueColor}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource DarkGreen}" />
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation
                                                    Duration="0:0:0.2"
                                                    FillBehavior="Stop"
                                                    From="{StaticResource MainBlueColor}"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource LightBlueColor}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation
                                                    Duration="0:0:0.2"
                                                    FillBehavior="Stop"
                                                    From="{StaticResource MainBlueColor}"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource BluePressedColor}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource LightBlue}" />
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation
                                                    Duration="0:0:0.2"
                                                    FillBehavior="Stop"
                                                    From="{StaticResource BluePressedColor}"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource MainBlueColor}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
            <!--#endregion-->

        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource DefaultUiButtonStyle}" TargetType="{x:Type controls:Button}" />

</ResourceDictionary>
